name: CI/CD Pipeline for Django WebApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: "us-east-1"
  ECR_REPOSITORY: "django-webapp-repository"
  CLUSTER_NAME: "my-eks-cluster"
  K8S_NAMESPACE: "default"
  IMAGE_TAG: "${{ github.sha }}"

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

      - name: Push Docker Image to ECR
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:latest

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Linting
        run: |
          flake8 .

      - name: Run Unit Tests
        run: |
          pytest --junitxml=results.xml

  deploy:
    name: Deploy to EKS
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f k8s/

      - name: Perform Health Check
        run: |
          kubectl rollout status deployment django-webapp-deployment -n $K8S_NAMESPACE

      - name: Rollback on Failure
        if: failure()
        run: |
          kubectl rollout undo deployment django-webapp-deployment -n $K8S_NAMESPACE
